//
//  ConsoleModels.swift
//  SwiftRCON
//
//  Created by LeeSeGun on 2022/01/10.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Console {
    // MARK: Use cases
    
    enum Something {
        struct Request {
        }
        
        struct Response {
        }
        
        struct ViewModel {
        }
    }
    
    enum FetchLog {
        struct Request { }
        struct Response {
            var logs: [RustConsole]
        }
        struct ViewModel {
            var logs: [RustConsole]
            
            func makeAttributedString() -> NSMutableAttributedString {
                let collect: [NSMutableAttributedString] = logs
                    .compactMap { log in
                        switch log.type {
                        case "Warning":
                            return NSMutableAttributedString(string: log.message, attributes: [NSAttributedString.Key.foregroundColor : UIColor.orange])
                        case "SEND":
                            return NSMutableAttributedString(string: log.message, attributes: [NSAttributedString.Key.foregroundColor : UIColor.blue])
                        default: // Generic
                            return NSMutableAttributedString(string: log.message, attributes: [NSAttributedString.Key.foregroundColor : UIColor.black])
                        }
                    }
                
                guard !collect.isEmpty else {
                    return NSMutableAttributedString()
                }
                
                let str = NSMutableAttributedString()
                collect.forEach { line in
                    str.append(line)
                    str.append(NSAttributedString(string: "\n"))
                }
                return str
            }
        }
    }
    
    enum RealtimeLog {
        struct Request { }
        struct Response { }
        struct viewModel { }
    }
}
